/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.Notification;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>dbo.NOTIFICATION.PROCESS_ID</code>.
     */
    public void setProcessId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.PROCESS_ID</code>.
     */
    public String getProcessId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.RETRY_COUNT</code>.
     */
    public void setRetryCount(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.RETRY_COUNT</code>.
     */
    public Integer getRetryCount() {
        return (Integer) get(1);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setLockedAt(Object value) {
        set(2, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getLockedAt() {
        return get(2);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.TIMEOUT_SEC</code>.
     */
    public void setTimeoutSec(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.TIMEOUT_SEC</code>.
     */
    public Integer getTimeoutSec() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.LAST_ERROR</code>.
     */
    public void setLastError(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.LAST_ERROR</code>.
     */
    public String getLastError() {
        return (String) get(4);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setLastAttemptAt(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getLastAttemptAt() {
        return get(5);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setId(Object value) {
        set(6, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getId() {
        return get(6);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.LOAN_ID</code>.
     */
    public void setLoanId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.LOAN_ID</code>.
     */
    public Long getLoanId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.MEMBER_ID</code>.
     */
    public void setMemberId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.MEMBER_ID</code>.
     */
    public Long getMemberId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(9);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.SUBJECT</code>.
     */
    public void setSubject(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.SUBJECT</code>.
     */
    public String getSubject() {
        return (String) get(10);
    }

    /**
     * Setter for <code>dbo.NOTIFICATION.CONTENT</code>.
     */
    public void setContent(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>dbo.NOTIFICATION.CONTENT</code>.
     */
    public String getContent() {
        return (String) get(11);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public void setCreatedAt(Object value) {
        set(12, value);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public Object getCreatedAt() {
        return get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Object> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRecord
     */
    public NotificationRecord() {
        super(Notification.NOTIFICATION);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(String processId, Integer retryCount, Object lockedAt, Integer timeoutSec, String lastError, Object lastAttemptAt, Object id, Long loanId, Long memberId, String email, String subject, String content, Object createdAt) {
        super(Notification.NOTIFICATION);

        setProcessId(processId);
        setRetryCount(retryCount);
        setLockedAt(lockedAt);
        setTimeoutSec(timeoutSec);
        setLastError(lastError);
        setLastAttemptAt(lastAttemptAt);
        setId(id);
        setLoanId(loanId);
        setMemberId(memberId);
        setEmail(email);
        setSubject(subject);
        setContent(content);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
